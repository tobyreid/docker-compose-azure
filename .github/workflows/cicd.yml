name: Docker Compose CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout + Build (fake) APP
        uses: actions/checkout@v2
      - name: Docker Build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: app-hello
          registry: dcmpacr.azurecr.io
          path: app
          tags: latest, ${{ github.run_id }}
          push: ${{ startsWith(github.ref, 'refs/heads/master') && github.event_name == 'push'}}
  api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout + Build (fake) API
        uses: actions/checkout@v2
      # - name: Docker Build
      #   uses: docker/build-push-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: tobymcreid/api-made-up-container-tag-replace-with-something-meaningful
      #     path: app
      #     tags: ${{ github.run_id }}
      #     push: ${{ startsWith(github.ref, 'refs/heads/master') && github.event_name == 'push'}}
  terraform:
    runs-on: ubuntu-latest
    needs: [app, api]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.28
      - name: Terraform Init
        run: terraform init -backend-config="container_name=${{ secrets.TF_CONTAINER_NAME }}" -backend-config="storage_account_name=${{ secrets.TF_STORAGE_ACCOUNT_NAME }}" -backend-config="access_key=${{ secrets.TF_ACCESS_KEY }}" -backend-config="key=${{ secrets.TF_KEY }}"
        working-directory: terraform
      - name: Terraform Validate
        run: terraform validate
        working-directory: terraform
      - name: Terraform Plan
        run: terraform plan -var "app-hello-tag=app-hello:${{ github.run_id }}" -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}"
        working-directory: terraform
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -var "app-hello-tag=app-hello:${{ github.run_id }}" -var "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -var "client_id=${{ secrets.AZURE_CLIENT_ID }}" -var "client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" -var "tenant_id=${{ secrets.AZURE_TENANT_ID }}" --auto-approve
        working-directory: terraform
